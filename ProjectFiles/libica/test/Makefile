# Makefile.in generated by automake 1.15.1 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/libica
pkgincludedir = $(includedir)/libica
pkglibdir = $(libdir)/libica
pkglibexecdir = $(libexecdir)/libica
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
TESTS = fips_test$(EXEEXT) icastats_test$(EXEEXT) \
	get_functionlist_test$(EXEEXT) get_version_test$(EXEEXT) \
	rng_test$(EXEEXT) drbg_test$(EXEEXT) drbg_birthdays_test.pl \
	des_test$(EXEEXT) des_ecb_test$(EXEEXT) des_cbc_test$(EXEEXT) \
	des_ctr_test$(EXEEXT) des_cfb_test$(EXEEXT) \
	des_ofb_test$(EXEEXT) tdes_test$(EXEEXT) \
	tdes_ecb_test$(EXEEXT) tdes_cbc_test$(EXEEXT) \
	tdes_ctr_test$(EXEEXT) tdes_cfb_test$(EXEEXT) \
	tdes_ofb_test$(EXEEXT) aes_128_test$(EXEEXT) \
	aes_192_test$(EXEEXT) aes_256_test$(EXEEXT) \
	aes_ecb_test$(EXEEXT) aes_cbc_test$(EXEEXT) \
	aes_ctr_test$(EXEEXT) aes_cfb_test$(EXEEXT) \
	aes_ofb_test$(EXEEXT) aes_xts_test$(EXEEXT) \
	aes_gcm_test$(EXEEXT) aes_gcm_kma_test$(EXEEXT) \
	cbccs_test$(EXEEXT) ccm_test$(EXEEXT) cmac_test$(EXEEXT) \
	sha2_test.sh sha3_test.sh sha1_test$(EXEEXT) \
	sha256_test$(EXEEXT) sha3_224_test$(EXEEXT) \
	sha3_256_test$(EXEEXT) sha3_384_test$(EXEEXT) \
	sha3_512_test$(EXEEXT) shake_128_test$(EXEEXT) \
	shake_256_test$(EXEEXT) rsa_keygen1024_test.sh \
	rsa_keygen2048_test.sh rsa_keygen3072_test.sh \
	rsa_keygen4096_test.sh rsa_key_check_test$(EXEEXT) \
	rsa_test$(EXEEXT) ec_keygen1_test.sh ecdh1_test.sh \
	ecdsa1_test.sh ec_keygen2_test.sh ecdh2_test.sh ecdsa2_test.sh \
	mp_test$(EXEEXT) $(am__append_1)
#am__append_1 = \
#${top_builddir}/src/internal_tests/ec_internal_test

check_PROGRAMS = fips_test$(EXEEXT) icastats_test$(EXEEXT) \
	get_functionlist_test$(EXEEXT) get_version_test$(EXEEXT) \
	rng_test$(EXEEXT) drbg_test$(EXEEXT) \
	drbg_birthdays_test$(EXEEXT) des_test$(EXEEXT) \
	des_ecb_test$(EXEEXT) des_cbc_test$(EXEEXT) \
	des_ctr_test$(EXEEXT) des_cfb_test$(EXEEXT) \
	des_ofb_test$(EXEEXT) tdes_test$(EXEEXT) \
	tdes_ecb_test$(EXEEXT) tdes_cbc_test$(EXEEXT) \
	tdes_ctr_test$(EXEEXT) tdes_cfb_test$(EXEEXT) \
	tdes_ofb_test$(EXEEXT) aes_128_test$(EXEEXT) \
	aes_192_test$(EXEEXT) aes_256_test$(EXEEXT) \
	aes_ecb_test$(EXEEXT) aes_cbc_test$(EXEEXT) \
	aes_ctr_test$(EXEEXT) aes_cfb_test$(EXEEXT) \
	aes_ofb_test$(EXEEXT) aes_xts_test$(EXEEXT) \
	aes_gcm_test$(EXEEXT) aes_gcm_kma_test$(EXEEXT) \
	cbccs_test$(EXEEXT) ccm_test$(EXEEXT) cmac_test$(EXEEXT) \
	sha_test$(EXEEXT) sha1_test$(EXEEXT) sha256_test$(EXEEXT) \
	sha3_224_test$(EXEEXT) sha3_256_test$(EXEEXT) \
	sha3_384_test$(EXEEXT) sha3_512_test$(EXEEXT) \
	shake_128_test$(EXEEXT) shake_256_test$(EXEEXT) \
	rsa_keygen_test$(EXEEXT) rsa_key_check_test$(EXEEXT) \
	rsa_test$(EXEEXT) ec_keygen_test$(EXEEXT) ecdh_test$(EXEEXT) \
	ecdsa_test$(EXEEXT) mp_test$(EXEEXT)
subdir = test
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
aes_128_test_SOURCES = aes_128_test.c
aes_128_test_OBJECTS = aes_128_test.$(OBJEXT)
aes_128_test_LDADD = $(LDADD)
aes_128_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
aes_192_test_SOURCES = aes_192_test.c
aes_192_test_OBJECTS = aes_192_test.$(OBJEXT)
aes_192_test_LDADD = $(LDADD)
aes_192_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_256_test_SOURCES = aes_256_test.c
aes_256_test_OBJECTS = aes_256_test.$(OBJEXT)
aes_256_test_LDADD = $(LDADD)
aes_256_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_cbc_test_SOURCES = aes_cbc_test.c
aes_cbc_test_OBJECTS = aes_cbc_test.$(OBJEXT)
aes_cbc_test_LDADD = $(LDADD)
aes_cbc_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_cfb_test_SOURCES = aes_cfb_test.c
aes_cfb_test_OBJECTS = aes_cfb_test.$(OBJEXT)
aes_cfb_test_LDADD = $(LDADD)
aes_cfb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_ctr_test_SOURCES = aes_ctr_test.c
aes_ctr_test_OBJECTS = aes_ctr_test.$(OBJEXT)
aes_ctr_test_LDADD = $(LDADD)
aes_ctr_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_ecb_test_SOURCES = aes_ecb_test.c
aes_ecb_test_OBJECTS = aes_ecb_test.$(OBJEXT)
aes_ecb_test_LDADD = $(LDADD)
aes_ecb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_gcm_kma_test_SOURCES = aes_gcm_kma_test.c
aes_gcm_kma_test_OBJECTS = aes_gcm_kma_test.$(OBJEXT)
aes_gcm_kma_test_LDADD = $(LDADD)
aes_gcm_kma_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_gcm_test_SOURCES = aes_gcm_test.c
aes_gcm_test_OBJECTS = aes_gcm_test.$(OBJEXT)
aes_gcm_test_LDADD = $(LDADD)
aes_gcm_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_ofb_test_SOURCES = aes_ofb_test.c
aes_ofb_test_OBJECTS = aes_ofb_test.$(OBJEXT)
aes_ofb_test_LDADD = $(LDADD)
aes_ofb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
aes_xts_test_SOURCES = aes_xts_test.c
aes_xts_test_OBJECTS = aes_xts_test.$(OBJEXT)
aes_xts_test_LDADD = $(LDADD)
aes_xts_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
cbccs_test_SOURCES = cbccs_test.c
cbccs_test_OBJECTS = cbccs_test.$(OBJEXT)
cbccs_test_LDADD = $(LDADD)
cbccs_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
ccm_test_SOURCES = ccm_test.c
ccm_test_OBJECTS = ccm_test.$(OBJEXT)
ccm_test_LDADD = $(LDADD)
ccm_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
cmac_test_SOURCES = cmac_test.c
cmac_test_OBJECTS = cmac_test.$(OBJEXT)
cmac_test_LDADD = $(LDADD)
cmac_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
des_cbc_test_SOURCES = des_cbc_test.c
des_cbc_test_OBJECTS = des_cbc_test.$(OBJEXT)
des_cbc_test_LDADD = $(LDADD)
des_cbc_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
des_cfb_test_SOURCES = des_cfb_test.c
des_cfb_test_OBJECTS = des_cfb_test.$(OBJEXT)
des_cfb_test_LDADD = $(LDADD)
des_cfb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
des_ctr_test_SOURCES = des_ctr_test.c
des_ctr_test_OBJECTS = des_ctr_test.$(OBJEXT)
des_ctr_test_LDADD = $(LDADD)
des_ctr_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
des_ecb_test_SOURCES = des_ecb_test.c
des_ecb_test_OBJECTS = des_ecb_test.$(OBJEXT)
des_ecb_test_LDADD = $(LDADD)
des_ecb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
des_ofb_test_SOURCES = des_ofb_test.c
des_ofb_test_OBJECTS = des_ofb_test.$(OBJEXT)
des_ofb_test_LDADD = $(LDADD)
des_ofb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
des_test_SOURCES = des_test.c
des_test_OBJECTS = des_test.$(OBJEXT)
des_test_LDADD = $(LDADD)
des_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
drbg_birthdays_test_SOURCES = drbg_birthdays_test.c
drbg_birthdays_test_OBJECTS = drbg_birthdays_test.$(OBJEXT)
drbg_birthdays_test_LDADD = $(LDADD)
drbg_birthdays_test_DEPENDENCIES =  \
	${top_builddir}/src/.libs/libica.so
drbg_test_SOURCES = drbg_test.c
drbg_test_OBJECTS = drbg_test.$(OBJEXT)
drbg_test_LDADD = $(LDADD)
drbg_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
ec_keygen_test_SOURCES = ec_keygen_test.c
ec_keygen_test_OBJECTS = ec_keygen_test.$(OBJEXT)
ec_keygen_test_LDADD = $(LDADD)
ec_keygen_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
ecdh_test_SOURCES = ecdh_test.c
ecdh_test_OBJECTS = ecdh_test.$(OBJEXT)
ecdh_test_LDADD = $(LDADD)
ecdh_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
ecdsa_test_SOURCES = ecdsa_test.c
ecdsa_test_OBJECTS = ecdsa_test.$(OBJEXT)
ecdsa_test_LDADD = $(LDADD)
ecdsa_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
fips_test_SOURCES = fips_test.c
fips_test_OBJECTS = fips_test.$(OBJEXT)
fips_test_LDADD = $(LDADD)
fips_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
get_functionlist_test_SOURCES = get_functionlist_test.c
get_functionlist_test_OBJECTS = get_functionlist_test.$(OBJEXT)
get_functionlist_test_LDADD = $(LDADD)
get_functionlist_test_DEPENDENCIES =  \
	${top_builddir}/src/.libs/libica.so
get_version_test_SOURCES = get_version_test.c
get_version_test_OBJECTS = get_version_test.$(OBJEXT)
get_version_test_LDADD = $(LDADD)
get_version_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
icastats_test_SOURCES = icastats_test.c
icastats_test_OBJECTS = icastats_test.$(OBJEXT)
icastats_test_LDADD = $(LDADD)
icastats_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
mp_test_SOURCES = mp_test.c
mp_test_OBJECTS = mp_test.$(OBJEXT)
mp_test_LDADD = $(LDADD)
mp_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
rng_test_SOURCES = rng_test.c
rng_test_OBJECTS = rng_test.$(OBJEXT)
rng_test_LDADD = $(LDADD)
rng_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
rsa_key_check_test_SOURCES = rsa_key_check_test.c
rsa_key_check_test_OBJECTS = rsa_key_check_test.$(OBJEXT)
rsa_key_check_test_LDADD = $(LDADD)
rsa_key_check_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
rsa_keygen_test_SOURCES = rsa_keygen_test.c
rsa_keygen_test_OBJECTS = rsa_keygen_test.$(OBJEXT)
rsa_keygen_test_LDADD = $(LDADD)
rsa_keygen_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
rsa_test_SOURCES = rsa_test.c
rsa_test_OBJECTS = rsa_test.$(OBJEXT)
rsa_test_LDADD = $(LDADD)
rsa_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
sha1_test_SOURCES = sha1_test.c
sha1_test_OBJECTS = sha1_test.$(OBJEXT)
sha1_test_LDADD = $(LDADD)
sha1_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
sha256_test_SOURCES = sha256_test.c
sha256_test_OBJECTS = sha256_test.$(OBJEXT)
sha256_test_LDADD = $(LDADD)
sha256_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
sha3_224_test_SOURCES = sha3_224_test.c
sha3_224_test_OBJECTS = sha3_224_test.$(OBJEXT)
sha3_224_test_LDADD = $(LDADD)
sha3_224_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
sha3_256_test_SOURCES = sha3_256_test.c
sha3_256_test_OBJECTS = sha3_256_test.$(OBJEXT)
sha3_256_test_LDADD = $(LDADD)
sha3_256_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
sha3_384_test_SOURCES = sha3_384_test.c
sha3_384_test_OBJECTS = sha3_384_test.$(OBJEXT)
sha3_384_test_LDADD = $(LDADD)
sha3_384_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
sha3_512_test_SOURCES = sha3_512_test.c
sha3_512_test_OBJECTS = sha3_512_test.$(OBJEXT)
sha3_512_test_LDADD = $(LDADD)
sha3_512_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
sha_test_SOURCES = sha_test.c
sha_test_OBJECTS = sha_test.$(OBJEXT)
sha_test_LDADD = $(LDADD)
sha_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
shake_128_test_SOURCES = shake_128_test.c
shake_128_test_OBJECTS = shake_128_test.$(OBJEXT)
shake_128_test_LDADD = $(LDADD)
shake_128_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
shake_256_test_SOURCES = shake_256_test.c
shake_256_test_OBJECTS = shake_256_test.$(OBJEXT)
shake_256_test_LDADD = $(LDADD)
shake_256_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
tdes_cbc_test_SOURCES = tdes_cbc_test.c
tdes_cbc_test_OBJECTS = tdes_cbc_test.$(OBJEXT)
tdes_cbc_test_LDADD = $(LDADD)
tdes_cbc_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
tdes_cfb_test_SOURCES = tdes_cfb_test.c
tdes_cfb_test_OBJECTS = tdes_cfb_test.$(OBJEXT)
tdes_cfb_test_LDADD = $(LDADD)
tdes_cfb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
tdes_ctr_test_SOURCES = tdes_ctr_test.c
tdes_ctr_test_OBJECTS = tdes_ctr_test.$(OBJEXT)
tdes_ctr_test_LDADD = $(LDADD)
tdes_ctr_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
tdes_ecb_test_SOURCES = tdes_ecb_test.c
tdes_ecb_test_OBJECTS = tdes_ecb_test.$(OBJEXT)
tdes_ecb_test_LDADD = $(LDADD)
tdes_ecb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
tdes_ofb_test_SOURCES = tdes_ofb_test.c
tdes_ofb_test_OBJECTS = tdes_ofb_test.$(OBJEXT)
tdes_ofb_test_LDADD = $(LDADD)
tdes_ofb_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
tdes_test_SOURCES = tdes_test.c
tdes_test_OBJECTS = tdes_test.$(OBJEXT)
tdes_test_LDADD = $(LDADD)
tdes_test_DEPENDENCIES = ${top_builddir}/src/.libs/libica.so
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = aes_128_test.c aes_192_test.c aes_256_test.c aes_cbc_test.c \
	aes_cfb_test.c aes_ctr_test.c aes_ecb_test.c \
	aes_gcm_kma_test.c aes_gcm_test.c aes_ofb_test.c \
	aes_xts_test.c cbccs_test.c ccm_test.c cmac_test.c \
	des_cbc_test.c des_cfb_test.c des_ctr_test.c des_ecb_test.c \
	des_ofb_test.c des_test.c drbg_birthdays_test.c drbg_test.c \
	ec_keygen_test.c ecdh_test.c ecdsa_test.c fips_test.c \
	get_functionlist_test.c get_version_test.c icastats_test.c \
	mp_test.c rng_test.c rsa_key_check_test.c rsa_keygen_test.c \
	rsa_test.c sha1_test.c sha256_test.c sha3_224_test.c \
	sha3_256_test.c sha3_384_test.c sha3_512_test.c sha_test.c \
	shake_128_test.c shake_256_test.c tdes_cbc_test.c \
	tdes_cfb_test.c tdes_ctr_test.c tdes_ecb_test.c \
	tdes_ofb_test.c tdes_test.c
DIST_SOURCES = aes_128_test.c aes_192_test.c aes_256_test.c \
	aes_cbc_test.c aes_cfb_test.c aes_ctr_test.c aes_ecb_test.c \
	aes_gcm_kma_test.c aes_gcm_test.c aes_ofb_test.c \
	aes_xts_test.c cbccs_test.c ccm_test.c cmac_test.c \
	des_cbc_test.c des_cfb_test.c des_ctr_test.c des_ecb_test.c \
	des_ofb_test.c des_test.c drbg_birthdays_test.c drbg_test.c \
	ec_keygen_test.c ecdh_test.c ecdsa_test.c fips_test.c \
	get_functionlist_test.c get_version_test.c icastats_test.c \
	mp_test.c rng_test.c rsa_key_check_test.c rsa_keygen_test.c \
	rsa_test.c sha1_test.c sha256_test.c sha3_224_test.c \
	sha3_256_test.c sha3_384_test.c sha3_512_test.c sha_test.c \
	shake_128_test.c shake_256_test.c tdes_cbc_test.c \
	tdes_cfb_test.c tdes_ctr_test.c tdes_ecb_test.c \
	tdes_ofb_test.c tdes_test.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
am__test_logs3 = $(am__test_logs2:.sh.log=.log)
SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
SH_LOG_COMPILE = $(SH_LOG_COMPILER) $(AM_SH_LOG_FLAGS) $(SH_LOG_FLAGS)
TEST_LOGS = $(am__test_logs3:.pl.log=.log)
PL_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
PL_LOG_COMPILE = $(PL_LOG_COMPILER) $(AM_PL_LOG_FLAGS) $(PL_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/sladyn/OMP-19/libica/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/sladyn/OMP-19/libica/missing autoconf
AUTOHEADER = ${SHELL} /home/sladyn/OMP-19/libica/missing autoheader
AUTOMAKE = ${SHELL} /home/sladyn/OMP-19/libica/missing automake-1.15
AWK = gawk
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = 
CCDEPMODE = depmode=gcc3
CFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"libica\" -DPACKAGE_TARNAME=\"libica\" -DPACKAGE_VERSION=\"3.5.0\" -DPACKAGE_STRING=\"libica\ 3.5.0\" -DPACKAGE_BUGREPORT=\"steuer@linux.vnet.ibm.com\" -DPACKAGE_URL=\"https://github.com/opencryptoki/libica\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_FCNTL_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STDDEF_H=1 -DHAVE_STDINT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_FILE_H=1 -DHAVE_SYS_IOCTL_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_SYSLOG_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DHAVE_STDLIB_H=1 -DHAVE_UNISTD_H=1 -DHAVE_SYS_PARAM_H=1 -DHAVE_GETPAGESIZE=1 -DHAVE_MMAP=1 -DHAVE_BZERO=1 -DHAVE_FTRUNCATE=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_MEMCHR=1 -DHAVE_MEMSET=1 -DHAVE_MUNMAP=1 -DHAVE_STRCASECMP=1 -DHAVE_STRERROR=1 -DHAVE_STRSTR=1 -DHAVE_STRTOL=1 -DHAVE_SETENV=1 -DHAVE_STRTOULL=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DPACKAGE=\"libica\" -DVERSION=\"3.5.0\"
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
FLAGS = -Wall -Wextra -mzarch -O3 -D_FORTIFY_SOURCE=2
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/sladyn/OMP-19/libica/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libica
PACKAGE_BUGREPORT = steuer@linux.vnet.ibm.com
PACKAGE_NAME = libica
PACKAGE_STRING = libica 3.5.0
PACKAGE_TARNAME = libica
PACKAGE_URL = https://github.com/opencryptoki/libica
PACKAGE_VERSION = 3.5.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 3.5.0
abs_builddir = /home/sladyn/OMP-19/libica/test
abs_srcdir = /home/sladyn/OMP-19/libica/test
abs_top_builddir = /home/sladyn/OMP-19/libica
abs_top_srcdir = /home/sladyn/OMP-19/libica
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/sladyn/OMP-19/libica/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
TEST_EXTENSIONS = .sh .pl
TESTS_ENVIRONMENT = export LD_LIBRARY_PATH=${builddir}/../src/.libs/ \
			   PATH=${builddir}/../src/:$$PATH \
			   LIBICA_TESTDATA=${srcdir}/testdata/;

AM_CFLAGS = -Wall -Wextra -mzarch -O3 -D_FORTIFY_SOURCE=2 -I${srcdir}/../include/ -I${srcdir}/../src/include/
LDADD =  ${top_builddir}/src/.libs/libica.so -lcrypto -lpthread
EXTRA_DIST = testdata testcase.h rsa_test.h aes_gcm_test.h ecdsa1_test.sh \
sha2_test.sh ecdh1_test.sh ecdsa2_test.sh ecdh2_test.sh \
drbg_birthdays_test.pl sha3_test.sh ec_keygen1_test.sh ec_keygen2_test.sh \
rsa_keygen2048_test.sh rsa_keygen1024_test.sh rsa_keygen4096_test.sh \
rsa_keygen3072_test.sh rsa_keygen_test.sh

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .pl .pl$(EXEEXT) .sh .sh$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign test/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

aes_128_test$(EXEEXT): $(aes_128_test_OBJECTS) $(aes_128_test_DEPENDENCIES) $(EXTRA_aes_128_test_DEPENDENCIES) 
	@rm -f aes_128_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_128_test_OBJECTS) $(aes_128_test_LDADD) $(LIBS)

aes_192_test$(EXEEXT): $(aes_192_test_OBJECTS) $(aes_192_test_DEPENDENCIES) $(EXTRA_aes_192_test_DEPENDENCIES) 
	@rm -f aes_192_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_192_test_OBJECTS) $(aes_192_test_LDADD) $(LIBS)

aes_256_test$(EXEEXT): $(aes_256_test_OBJECTS) $(aes_256_test_DEPENDENCIES) $(EXTRA_aes_256_test_DEPENDENCIES) 
	@rm -f aes_256_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_256_test_OBJECTS) $(aes_256_test_LDADD) $(LIBS)

aes_cbc_test$(EXEEXT): $(aes_cbc_test_OBJECTS) $(aes_cbc_test_DEPENDENCIES) $(EXTRA_aes_cbc_test_DEPENDENCIES) 
	@rm -f aes_cbc_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_cbc_test_OBJECTS) $(aes_cbc_test_LDADD) $(LIBS)

aes_cfb_test$(EXEEXT): $(aes_cfb_test_OBJECTS) $(aes_cfb_test_DEPENDENCIES) $(EXTRA_aes_cfb_test_DEPENDENCIES) 
	@rm -f aes_cfb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_cfb_test_OBJECTS) $(aes_cfb_test_LDADD) $(LIBS)

aes_ctr_test$(EXEEXT): $(aes_ctr_test_OBJECTS) $(aes_ctr_test_DEPENDENCIES) $(EXTRA_aes_ctr_test_DEPENDENCIES) 
	@rm -f aes_ctr_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_ctr_test_OBJECTS) $(aes_ctr_test_LDADD) $(LIBS)

aes_ecb_test$(EXEEXT): $(aes_ecb_test_OBJECTS) $(aes_ecb_test_DEPENDENCIES) $(EXTRA_aes_ecb_test_DEPENDENCIES) 
	@rm -f aes_ecb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_ecb_test_OBJECTS) $(aes_ecb_test_LDADD) $(LIBS)

aes_gcm_kma_test$(EXEEXT): $(aes_gcm_kma_test_OBJECTS) $(aes_gcm_kma_test_DEPENDENCIES) $(EXTRA_aes_gcm_kma_test_DEPENDENCIES) 
	@rm -f aes_gcm_kma_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_gcm_kma_test_OBJECTS) $(aes_gcm_kma_test_LDADD) $(LIBS)

aes_gcm_test$(EXEEXT): $(aes_gcm_test_OBJECTS) $(aes_gcm_test_DEPENDENCIES) $(EXTRA_aes_gcm_test_DEPENDENCIES) 
	@rm -f aes_gcm_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_gcm_test_OBJECTS) $(aes_gcm_test_LDADD) $(LIBS)

aes_ofb_test$(EXEEXT): $(aes_ofb_test_OBJECTS) $(aes_ofb_test_DEPENDENCIES) $(EXTRA_aes_ofb_test_DEPENDENCIES) 
	@rm -f aes_ofb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_ofb_test_OBJECTS) $(aes_ofb_test_LDADD) $(LIBS)

aes_xts_test$(EXEEXT): $(aes_xts_test_OBJECTS) $(aes_xts_test_DEPENDENCIES) $(EXTRA_aes_xts_test_DEPENDENCIES) 
	@rm -f aes_xts_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(aes_xts_test_OBJECTS) $(aes_xts_test_LDADD) $(LIBS)

cbccs_test$(EXEEXT): $(cbccs_test_OBJECTS) $(cbccs_test_DEPENDENCIES) $(EXTRA_cbccs_test_DEPENDENCIES) 
	@rm -f cbccs_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cbccs_test_OBJECTS) $(cbccs_test_LDADD) $(LIBS)

ccm_test$(EXEEXT): $(ccm_test_OBJECTS) $(ccm_test_DEPENDENCIES) $(EXTRA_ccm_test_DEPENDENCIES) 
	@rm -f ccm_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ccm_test_OBJECTS) $(ccm_test_LDADD) $(LIBS)

cmac_test$(EXEEXT): $(cmac_test_OBJECTS) $(cmac_test_DEPENDENCIES) $(EXTRA_cmac_test_DEPENDENCIES) 
	@rm -f cmac_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cmac_test_OBJECTS) $(cmac_test_LDADD) $(LIBS)

des_cbc_test$(EXEEXT): $(des_cbc_test_OBJECTS) $(des_cbc_test_DEPENDENCIES) $(EXTRA_des_cbc_test_DEPENDENCIES) 
	@rm -f des_cbc_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(des_cbc_test_OBJECTS) $(des_cbc_test_LDADD) $(LIBS)

des_cfb_test$(EXEEXT): $(des_cfb_test_OBJECTS) $(des_cfb_test_DEPENDENCIES) $(EXTRA_des_cfb_test_DEPENDENCIES) 
	@rm -f des_cfb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(des_cfb_test_OBJECTS) $(des_cfb_test_LDADD) $(LIBS)

des_ctr_test$(EXEEXT): $(des_ctr_test_OBJECTS) $(des_ctr_test_DEPENDENCIES) $(EXTRA_des_ctr_test_DEPENDENCIES) 
	@rm -f des_ctr_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(des_ctr_test_OBJECTS) $(des_ctr_test_LDADD) $(LIBS)

des_ecb_test$(EXEEXT): $(des_ecb_test_OBJECTS) $(des_ecb_test_DEPENDENCIES) $(EXTRA_des_ecb_test_DEPENDENCIES) 
	@rm -f des_ecb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(des_ecb_test_OBJECTS) $(des_ecb_test_LDADD) $(LIBS)

des_ofb_test$(EXEEXT): $(des_ofb_test_OBJECTS) $(des_ofb_test_DEPENDENCIES) $(EXTRA_des_ofb_test_DEPENDENCIES) 
	@rm -f des_ofb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(des_ofb_test_OBJECTS) $(des_ofb_test_LDADD) $(LIBS)

des_test$(EXEEXT): $(des_test_OBJECTS) $(des_test_DEPENDENCIES) $(EXTRA_des_test_DEPENDENCIES) 
	@rm -f des_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(des_test_OBJECTS) $(des_test_LDADD) $(LIBS)

drbg_birthdays_test$(EXEEXT): $(drbg_birthdays_test_OBJECTS) $(drbg_birthdays_test_DEPENDENCIES) $(EXTRA_drbg_birthdays_test_DEPENDENCIES) 
	@rm -f drbg_birthdays_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(drbg_birthdays_test_OBJECTS) $(drbg_birthdays_test_LDADD) $(LIBS)

drbg_test$(EXEEXT): $(drbg_test_OBJECTS) $(drbg_test_DEPENDENCIES) $(EXTRA_drbg_test_DEPENDENCIES) 
	@rm -f drbg_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(drbg_test_OBJECTS) $(drbg_test_LDADD) $(LIBS)

ec_keygen_test$(EXEEXT): $(ec_keygen_test_OBJECTS) $(ec_keygen_test_DEPENDENCIES) $(EXTRA_ec_keygen_test_DEPENDENCIES) 
	@rm -f ec_keygen_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ec_keygen_test_OBJECTS) $(ec_keygen_test_LDADD) $(LIBS)

ecdh_test$(EXEEXT): $(ecdh_test_OBJECTS) $(ecdh_test_DEPENDENCIES) $(EXTRA_ecdh_test_DEPENDENCIES) 
	@rm -f ecdh_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ecdh_test_OBJECTS) $(ecdh_test_LDADD) $(LIBS)

ecdsa_test$(EXEEXT): $(ecdsa_test_OBJECTS) $(ecdsa_test_DEPENDENCIES) $(EXTRA_ecdsa_test_DEPENDENCIES) 
	@rm -f ecdsa_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ecdsa_test_OBJECTS) $(ecdsa_test_LDADD) $(LIBS)

fips_test$(EXEEXT): $(fips_test_OBJECTS) $(fips_test_DEPENDENCIES) $(EXTRA_fips_test_DEPENDENCIES) 
	@rm -f fips_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fips_test_OBJECTS) $(fips_test_LDADD) $(LIBS)

get_functionlist_test$(EXEEXT): $(get_functionlist_test_OBJECTS) $(get_functionlist_test_DEPENDENCIES) $(EXTRA_get_functionlist_test_DEPENDENCIES) 
	@rm -f get_functionlist_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_functionlist_test_OBJECTS) $(get_functionlist_test_LDADD) $(LIBS)

get_version_test$(EXEEXT): $(get_version_test_OBJECTS) $(get_version_test_DEPENDENCIES) $(EXTRA_get_version_test_DEPENDENCIES) 
	@rm -f get_version_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(get_version_test_OBJECTS) $(get_version_test_LDADD) $(LIBS)

icastats_test$(EXEEXT): $(icastats_test_OBJECTS) $(icastats_test_DEPENDENCIES) $(EXTRA_icastats_test_DEPENDENCIES) 
	@rm -f icastats_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(icastats_test_OBJECTS) $(icastats_test_LDADD) $(LIBS)

mp_test$(EXEEXT): $(mp_test_OBJECTS) $(mp_test_DEPENDENCIES) $(EXTRA_mp_test_DEPENDENCIES) 
	@rm -f mp_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mp_test_OBJECTS) $(mp_test_LDADD) $(LIBS)

rng_test$(EXEEXT): $(rng_test_OBJECTS) $(rng_test_DEPENDENCIES) $(EXTRA_rng_test_DEPENDENCIES) 
	@rm -f rng_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rng_test_OBJECTS) $(rng_test_LDADD) $(LIBS)

rsa_key_check_test$(EXEEXT): $(rsa_key_check_test_OBJECTS) $(rsa_key_check_test_DEPENDENCIES) $(EXTRA_rsa_key_check_test_DEPENDENCIES) 
	@rm -f rsa_key_check_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rsa_key_check_test_OBJECTS) $(rsa_key_check_test_LDADD) $(LIBS)

rsa_keygen_test$(EXEEXT): $(rsa_keygen_test_OBJECTS) $(rsa_keygen_test_DEPENDENCIES) $(EXTRA_rsa_keygen_test_DEPENDENCIES) 
	@rm -f rsa_keygen_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rsa_keygen_test_OBJECTS) $(rsa_keygen_test_LDADD) $(LIBS)

rsa_test$(EXEEXT): $(rsa_test_OBJECTS) $(rsa_test_DEPENDENCIES) $(EXTRA_rsa_test_DEPENDENCIES) 
	@rm -f rsa_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(rsa_test_OBJECTS) $(rsa_test_LDADD) $(LIBS)

sha1_test$(EXEEXT): $(sha1_test_OBJECTS) $(sha1_test_DEPENDENCIES) $(EXTRA_sha1_test_DEPENDENCIES) 
	@rm -f sha1_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha1_test_OBJECTS) $(sha1_test_LDADD) $(LIBS)

sha256_test$(EXEEXT): $(sha256_test_OBJECTS) $(sha256_test_DEPENDENCIES) $(EXTRA_sha256_test_DEPENDENCIES) 
	@rm -f sha256_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha256_test_OBJECTS) $(sha256_test_LDADD) $(LIBS)

sha3_224_test$(EXEEXT): $(sha3_224_test_OBJECTS) $(sha3_224_test_DEPENDENCIES) $(EXTRA_sha3_224_test_DEPENDENCIES) 
	@rm -f sha3_224_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha3_224_test_OBJECTS) $(sha3_224_test_LDADD) $(LIBS)

sha3_256_test$(EXEEXT): $(sha3_256_test_OBJECTS) $(sha3_256_test_DEPENDENCIES) $(EXTRA_sha3_256_test_DEPENDENCIES) 
	@rm -f sha3_256_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha3_256_test_OBJECTS) $(sha3_256_test_LDADD) $(LIBS)

sha3_384_test$(EXEEXT): $(sha3_384_test_OBJECTS) $(sha3_384_test_DEPENDENCIES) $(EXTRA_sha3_384_test_DEPENDENCIES) 
	@rm -f sha3_384_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha3_384_test_OBJECTS) $(sha3_384_test_LDADD) $(LIBS)

sha3_512_test$(EXEEXT): $(sha3_512_test_OBJECTS) $(sha3_512_test_DEPENDENCIES) $(EXTRA_sha3_512_test_DEPENDENCIES) 
	@rm -f sha3_512_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha3_512_test_OBJECTS) $(sha3_512_test_LDADD) $(LIBS)

sha_test$(EXEEXT): $(sha_test_OBJECTS) $(sha_test_DEPENDENCIES) $(EXTRA_sha_test_DEPENDENCIES) 
	@rm -f sha_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sha_test_OBJECTS) $(sha_test_LDADD) $(LIBS)

shake_128_test$(EXEEXT): $(shake_128_test_OBJECTS) $(shake_128_test_DEPENDENCIES) $(EXTRA_shake_128_test_DEPENDENCIES) 
	@rm -f shake_128_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shake_128_test_OBJECTS) $(shake_128_test_LDADD) $(LIBS)

shake_256_test$(EXEEXT): $(shake_256_test_OBJECTS) $(shake_256_test_DEPENDENCIES) $(EXTRA_shake_256_test_DEPENDENCIES) 
	@rm -f shake_256_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shake_256_test_OBJECTS) $(shake_256_test_LDADD) $(LIBS)

tdes_cbc_test$(EXEEXT): $(tdes_cbc_test_OBJECTS) $(tdes_cbc_test_DEPENDENCIES) $(EXTRA_tdes_cbc_test_DEPENDENCIES) 
	@rm -f tdes_cbc_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdes_cbc_test_OBJECTS) $(tdes_cbc_test_LDADD) $(LIBS)

tdes_cfb_test$(EXEEXT): $(tdes_cfb_test_OBJECTS) $(tdes_cfb_test_DEPENDENCIES) $(EXTRA_tdes_cfb_test_DEPENDENCIES) 
	@rm -f tdes_cfb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdes_cfb_test_OBJECTS) $(tdes_cfb_test_LDADD) $(LIBS)

tdes_ctr_test$(EXEEXT): $(tdes_ctr_test_OBJECTS) $(tdes_ctr_test_DEPENDENCIES) $(EXTRA_tdes_ctr_test_DEPENDENCIES) 
	@rm -f tdes_ctr_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdes_ctr_test_OBJECTS) $(tdes_ctr_test_LDADD) $(LIBS)

tdes_ecb_test$(EXEEXT): $(tdes_ecb_test_OBJECTS) $(tdes_ecb_test_DEPENDENCIES) $(EXTRA_tdes_ecb_test_DEPENDENCIES) 
	@rm -f tdes_ecb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdes_ecb_test_OBJECTS) $(tdes_ecb_test_LDADD) $(LIBS)

tdes_ofb_test$(EXEEXT): $(tdes_ofb_test_OBJECTS) $(tdes_ofb_test_DEPENDENCIES) $(EXTRA_tdes_ofb_test_DEPENDENCIES) 
	@rm -f tdes_ofb_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdes_ofb_test_OBJECTS) $(tdes_ofb_test_LDADD) $(LIBS)

tdes_test$(EXEEXT): $(tdes_test_OBJECTS) $(tdes_test_DEPENDENCIES) $(EXTRA_tdes_test_DEPENDENCIES) 
	@rm -f tdes_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdes_test_OBJECTS) $(tdes_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/aes_128_test.Po
include ./$(DEPDIR)/aes_192_test.Po
include ./$(DEPDIR)/aes_256_test.Po
include ./$(DEPDIR)/aes_cbc_test.Po
include ./$(DEPDIR)/aes_cfb_test.Po
include ./$(DEPDIR)/aes_ctr_test.Po
include ./$(DEPDIR)/aes_ecb_test.Po
include ./$(DEPDIR)/aes_gcm_kma_test.Po
include ./$(DEPDIR)/aes_gcm_test.Po
include ./$(DEPDIR)/aes_ofb_test.Po
include ./$(DEPDIR)/aes_xts_test.Po
include ./$(DEPDIR)/cbccs_test.Po
include ./$(DEPDIR)/ccm_test.Po
include ./$(DEPDIR)/cmac_test.Po
include ./$(DEPDIR)/des_cbc_test.Po
include ./$(DEPDIR)/des_cfb_test.Po
include ./$(DEPDIR)/des_ctr_test.Po
include ./$(DEPDIR)/des_ecb_test.Po
include ./$(DEPDIR)/des_ofb_test.Po
include ./$(DEPDIR)/des_test.Po
include ./$(DEPDIR)/drbg_birthdays_test.Po
include ./$(DEPDIR)/drbg_test.Po
include ./$(DEPDIR)/ec_keygen_test.Po
include ./$(DEPDIR)/ecdh_test.Po
include ./$(DEPDIR)/ecdsa_test.Po
include ./$(DEPDIR)/fips_test.Po
include ./$(DEPDIR)/get_functionlist_test.Po
include ./$(DEPDIR)/get_version_test.Po
include ./$(DEPDIR)/icastats_test.Po
include ./$(DEPDIR)/mp_test.Po
include ./$(DEPDIR)/rng_test.Po
include ./$(DEPDIR)/rsa_key_check_test.Po
include ./$(DEPDIR)/rsa_keygen_test.Po
include ./$(DEPDIR)/rsa_test.Po
include ./$(DEPDIR)/sha1_test.Po
include ./$(DEPDIR)/sha256_test.Po
include ./$(DEPDIR)/sha3_224_test.Po
include ./$(DEPDIR)/sha3_256_test.Po
include ./$(DEPDIR)/sha3_384_test.Po
include ./$(DEPDIR)/sha3_512_test.Po
include ./$(DEPDIR)/sha_test.Po
include ./$(DEPDIR)/shake_128_test.Po
include ./$(DEPDIR)/shake_256_test.Po
include ./$(DEPDIR)/tdes_cbc_test.Po
include ./$(DEPDIR)/tdes_cfb_test.Po
include ./$(DEPDIR)/tdes_ctr_test.Po
include ./$(DEPDIR)/tdes_ecb_test.Po
include ./$(DEPDIR)/tdes_ofb_test.Po
include ./$(DEPDIR)/tdes_test.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
fips_test.log: fips_test$(EXEEXT)
	@p='fips_test$(EXEEXT)'; \
	b='fips_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
icastats_test.log: icastats_test$(EXEEXT)
	@p='icastats_test$(EXEEXT)'; \
	b='icastats_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
get_functionlist_test.log: get_functionlist_test$(EXEEXT)
	@p='get_functionlist_test$(EXEEXT)'; \
	b='get_functionlist_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
get_version_test.log: get_version_test$(EXEEXT)
	@p='get_version_test$(EXEEXT)'; \
	b='get_version_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rng_test.log: rng_test$(EXEEXT)
	@p='rng_test$(EXEEXT)'; \
	b='rng_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
drbg_test.log: drbg_test$(EXEEXT)
	@p='drbg_test$(EXEEXT)'; \
	b='drbg_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
des_test.log: des_test$(EXEEXT)
	@p='des_test$(EXEEXT)'; \
	b='des_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
des_ecb_test.log: des_ecb_test$(EXEEXT)
	@p='des_ecb_test$(EXEEXT)'; \
	b='des_ecb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
des_cbc_test.log: des_cbc_test$(EXEEXT)
	@p='des_cbc_test$(EXEEXT)'; \
	b='des_cbc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
des_ctr_test.log: des_ctr_test$(EXEEXT)
	@p='des_ctr_test$(EXEEXT)'; \
	b='des_ctr_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
des_cfb_test.log: des_cfb_test$(EXEEXT)
	@p='des_cfb_test$(EXEEXT)'; \
	b='des_cfb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
des_ofb_test.log: des_ofb_test$(EXEEXT)
	@p='des_ofb_test$(EXEEXT)'; \
	b='des_ofb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdes_test.log: tdes_test$(EXEEXT)
	@p='tdes_test$(EXEEXT)'; \
	b='tdes_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdes_ecb_test.log: tdes_ecb_test$(EXEEXT)
	@p='tdes_ecb_test$(EXEEXT)'; \
	b='tdes_ecb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdes_cbc_test.log: tdes_cbc_test$(EXEEXT)
	@p='tdes_cbc_test$(EXEEXT)'; \
	b='tdes_cbc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdes_ctr_test.log: tdes_ctr_test$(EXEEXT)
	@p='tdes_ctr_test$(EXEEXT)'; \
	b='tdes_ctr_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdes_cfb_test.log: tdes_cfb_test$(EXEEXT)
	@p='tdes_cfb_test$(EXEEXT)'; \
	b='tdes_cfb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdes_ofb_test.log: tdes_ofb_test$(EXEEXT)
	@p='tdes_ofb_test$(EXEEXT)'; \
	b='tdes_ofb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_128_test.log: aes_128_test$(EXEEXT)
	@p='aes_128_test$(EXEEXT)'; \
	b='aes_128_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_192_test.log: aes_192_test$(EXEEXT)
	@p='aes_192_test$(EXEEXT)'; \
	b='aes_192_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_256_test.log: aes_256_test$(EXEEXT)
	@p='aes_256_test$(EXEEXT)'; \
	b='aes_256_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_ecb_test.log: aes_ecb_test$(EXEEXT)
	@p='aes_ecb_test$(EXEEXT)'; \
	b='aes_ecb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_cbc_test.log: aes_cbc_test$(EXEEXT)
	@p='aes_cbc_test$(EXEEXT)'; \
	b='aes_cbc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_ctr_test.log: aes_ctr_test$(EXEEXT)
	@p='aes_ctr_test$(EXEEXT)'; \
	b='aes_ctr_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_cfb_test.log: aes_cfb_test$(EXEEXT)
	@p='aes_cfb_test$(EXEEXT)'; \
	b='aes_cfb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_ofb_test.log: aes_ofb_test$(EXEEXT)
	@p='aes_ofb_test$(EXEEXT)'; \
	b='aes_ofb_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_xts_test.log: aes_xts_test$(EXEEXT)
	@p='aes_xts_test$(EXEEXT)'; \
	b='aes_xts_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_gcm_test.log: aes_gcm_test$(EXEEXT)
	@p='aes_gcm_test$(EXEEXT)'; \
	b='aes_gcm_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
aes_gcm_kma_test.log: aes_gcm_kma_test$(EXEEXT)
	@p='aes_gcm_kma_test$(EXEEXT)'; \
	b='aes_gcm_kma_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cbccs_test.log: cbccs_test$(EXEEXT)
	@p='cbccs_test$(EXEEXT)'; \
	b='cbccs_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ccm_test.log: ccm_test$(EXEEXT)
	@p='ccm_test$(EXEEXT)'; \
	b='ccm_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cmac_test.log: cmac_test$(EXEEXT)
	@p='cmac_test$(EXEEXT)'; \
	b='cmac_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sha1_test.log: sha1_test$(EXEEXT)
	@p='sha1_test$(EXEEXT)'; \
	b='sha1_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sha256_test.log: sha256_test$(EXEEXT)
	@p='sha256_test$(EXEEXT)'; \
	b='sha256_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sha3_224_test.log: sha3_224_test$(EXEEXT)
	@p='sha3_224_test$(EXEEXT)'; \
	b='sha3_224_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sha3_256_test.log: sha3_256_test$(EXEEXT)
	@p='sha3_256_test$(EXEEXT)'; \
	b='sha3_256_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sha3_384_test.log: sha3_384_test$(EXEEXT)
	@p='sha3_384_test$(EXEEXT)'; \
	b='sha3_384_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
sha3_512_test.log: sha3_512_test$(EXEEXT)
	@p='sha3_512_test$(EXEEXT)'; \
	b='sha3_512_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shake_128_test.log: shake_128_test$(EXEEXT)
	@p='shake_128_test$(EXEEXT)'; \
	b='shake_128_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
shake_256_test.log: shake_256_test$(EXEEXT)
	@p='shake_256_test$(EXEEXT)'; \
	b='shake_256_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rsa_key_check_test.log: rsa_key_check_test$(EXEEXT)
	@p='rsa_key_check_test$(EXEEXT)'; \
	b='rsa_key_check_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
rsa_test.log: rsa_test$(EXEEXT)
	@p='rsa_test$(EXEEXT)'; \
	b='rsa_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mp_test.log: mp_test$(EXEEXT)
	@p='mp_test$(EXEEXT)'; \
	b='mp_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
${top_builddir}/src/internal_tests/ec_internal_test.log: ${top_builddir}/src/internal_tests/ec_internal_test
	@p='${top_builddir}/src/internal_tests/ec_internal_test'; \
	b='${top_builddir}/src/internal_tests/ec_internal_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.sh.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.sh$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)
.pl.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(PL_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_PL_LOG_DRIVER_FLAGS) $(PL_LOG_DRIVER_FLAGS) -- $(PL_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.pl$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(PL_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_PL_LOG_DRIVER_FLAGS) $(PL_LOG_DRIVER_FLAGS) -- $(PL_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
